apiVersion: batch/v1
kind: Job
metadata:
  name: gravitee-init-job
spec:
  template:
    metadata:
      name: gravitee-init-job
    spec:
      volumes:
      - name: gravitee-init-job-volume
        configMap:
          name: gravitee-apis
      restartPolicy: Never
      containers:
      - name: gravitee-init-job
        image: bash:5.0
        volumeMounts:
          - mountPath: /config
            name: gravitee-init-job-volume
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Installing curl"
          apk add curl
          echo "Installing jq"
          apk add jq
          echo "Waiting for Gravitee Management API startup"
          MANAGEMENT_URL=http://gravitee-management-api-svc:8083/management/apis
          AUTHORIZATION='--user admin:admin'
          until curl ${AUTHORIZATION} --head --fail ${MANAGEMENT_URL}
          do
              echo '.'
              sleep 3
          done
          echo "Gravitee Management API available at ${MANAGEMENT_URL}"
          for f in /config/*_api.json; do
              echo "Importing API from $f"
              BASENAME=$(basename $f "_api.json")
              echo $BASENAME
              curl -v -X POST ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" -d "@/config/${BASENAME}_api.json" ${MANAGEMENT_URL} -o /tmp/${BASENAME}_api_resp.json
              API_ID=`cat /tmp/${BASENAME}_api_resp.json | jq -r .id`
              echo
              echo "API ID: $API_ID"
              curl -X POST ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" -d "@/config/${BASENAME}_plan.json" ${MANAGEMENT_URL}/${API_ID}/plans -o /tmp/${BASENAME}_plan_resp.json
              PLAN_ID=`cat /tmp/${BASENAME}_plan_resp.json | jq -r .id`
              echo
              echo "Plan ID: $PLAN_ID"
              curl -v -X POST ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" ${MANAGEMENT_URL}/${API_ID}/plans/${PLAN_ID}/_publish
              curl -v -X POST ${AUTHORIZATION} ${MANAGEMENT_URL}/${API_ID}/deploy
              curl -v -X POST ${AUTHORIZATION} ${MANAGEMENT_URL}/${API_ID}?action=START
          done
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    gui_api.json: |
        {
            "name": "CloverDX UI",
            "version": "1.0",
            "description": "CloverDX Server Console",
            "contextPath": "/clover",
            "endpoint": "http://cloverdx:8080/clover",
            "groups": [
        ],
        "paths": 
            []
        }
    gui_plan.json: |
        {
            "name": "CloverDX Plan",
            "description": "CloverDX Server Console Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    ds_api.json: |
        {
            "name": "CloverDX Data Services",
            "version": "1.0",
            "description": "CloverDX Data Services",
            "contextPath": "/data-service",
            "endpoint": "http://cloverdx:8080/clover/data-service",
            "groups": [
        ],
        "paths": 
            []
        }
    ds_plan.json: |
        {
            "name": "CloverDX Data Services Plan",
            "description": "CloverDX Data Services Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    grafana_api.json: |
        {
            "name": "Grafana",
            "version": "1.0",
            "description": "Monitoring - Grafana",
            "contextPath": "/monitoring",
            "endpoint": "http://grafana:3000",
            "groups": [
        ],
        "paths": 
            []
        }
    grafana_plan.json: |
        {
            "name": "Grafana Plan",
            "description": "Grafana Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    gravitee_ui_api.json: |
        {
            "name": "Gravitee UI",
            "version": "1.0",
            "description": "Gravitee Management UI",
            "contextPath": "/gravitee",
            "endpoint": "http://gravitee-management-ui-svc:80",
            "groups": [
        ],
        "paths": 
            []
        }
    gravitee_ui_plan.json: |
        {
            "name": "Gravitee UI Plan",
            "description": "Gravitee Management UI Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name:  gravitee-apis
kind: List
metadata: {}
