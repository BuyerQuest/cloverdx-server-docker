apiVersion: batch/v1
kind: Job
metadata:
  name: gravitee-init-job
spec:
  template:
    metadata:
      name: gravitee-init-job
    spec:
      volumes:
      - name: gravitee-init-job-volume
        configMap:
          name: gravitee-apis
      restartPolicy: Never
      containers:
      - name: gravitee-init-job
        image: bash:5.0
        volumeMounts:
          - mountPath: /config
            name: gravitee-init-job-volume
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Installing curl"
          apk add curl
          echo "Installing jq"
          apk add jq

          MANAGEMENT_URL=http://gravitee-management-api-svc:8083/management/apis
          AUTHORIZATION='--user admin:admin'
          AM_MANAGEMENT_URL=http://gravitee-am-management-api-svc:8093/management/domains
          AM_AUTHORIZATION='--user admin:adminadmin'

          function httpWait() {
              local CURL_ARGS=$1
              until curl --output /dev/null --silent --fail ${CURL_ARGS}
              do
                  echo '.'
                  sleep 5
              done
          }

          echo "Waiting for Gravitee Access Management API startup"
          httpWait "-X POST ${AM_AUTHORIZATION} http://gravitee-am-management-api-svc:8093/admin/token" 
          echo "Gravitee Access Management API available at http://gravitee-am-management-api-svc:8093"

          echo "Creating CloverDX Domain in Gravitee Access Management"
          ACCESS_TOKEN=`curl -X POST http://gravitee-am-management-api-svc:8093/admin/token ${AM_AUTHORIZATION} | jq -r .access_token`
          curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type:application/json;charset=UTF-8" -X POST -d '{"name":"CloverDX Domain","description":"CloverDX Security Domain"}' ${AM_MANAGEMENT_URL}
          curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type:application/json;charset=UTF-8" -X PUT -d '{"enabled": true}' ${AM_MANAGEMENT_URL}/cloverdx-domain
          CLIENT_ID=`curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type:application/json;charset=UTF-8" -X POST -d '{"clientName":"cloverdx", "clientId":"THE-CLIENT-ID", "clientSecret":"THE-CLIENT-SECRET"}' ${AM_MANAGEMENT_URL}/cloverdx-domain/clients | jq -r .id`
          curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type:application/json;charset=UTF-8" -X PUT -d '{"authorizedGrantTypes":["client_credentials"]}' ${AM_MANAGEMENT_URL}/cloverdx-domain/clients/${CLIENT_ID}

          echo "Waiting for Gravitee Gateway Management API startup"
          httpWait "${AUTHORIZATION} --head ${MANAGEMENT_URL}" 
          echo "Gravitee Gateway Management API available at ${MANAGEMENT_URL}"

          for f in /config/*_api.json; do
              echo "Importing API from $f"
              BASENAME=$(basename $f "_api.json")
              echo $BASENAME

              # Create API
              curl -v -X POST ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" -d "@/config/${BASENAME}_api.json" ${MANAGEMENT_URL} -o /tmp/${BASENAME}_api_resp.json
              API_ID=`cat /tmp/${BASENAME}_api_resp.json | jq -r .id`
              echo
              echo "API ID: $API_ID"

              # Create plan for the API
              curl -X POST ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" -d "@/config/${BASENAME}_plan.json" ${MANAGEMENT_URL}/${API_ID}/plans -o /tmp/${BASENAME}_plan_resp.json
              PLAN_ID=`cat /tmp/${BASENAME}_plan_resp.json | jq -r .id`
              echo
              echo "Plan ID: $PLAN_ID"
              curl -v -X POST ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" ${MANAGEMENT_URL}/${API_ID}/plans/${PLAN_ID}/_publish

              # Update the API (additional configuration, oAuth2 for example)
              if [ -f /config/${BASENAME}_update.json ]; then
                  echo "Updating API ID: $API_ID"
                  curl -X PUT ${AUTHORIZATION} -H "Content-Type:application/json;charset=UTF-8" -d "@/config/${BASENAME}_update.json" ${MANAGEMENT_URL}/${API_ID}
              fi  

              # Deploy and start the API
              curl -v -X POST ${AUTHORIZATION} ${MANAGEMENT_URL}/${API_ID}/deploy
              curl -v -X POST ${AUTHORIZATION} ${MANAGEMENT_URL}/${API_ID}?action=START
          done
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    gui_api.json: |
        {
            "name": "CloverDX UI",
            "version": "1.0",
            "description": "CloverDX Server Console",
            "contextPath": "/clover",
            "endpoint": "http://cloverdx:8080/clover",
            "groups": [
        ],
        "paths": 
            []
        }
    gui_plan.json: |
        {
            "name": "CloverDX Plan",
            "description": "CloverDX Server Console Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    ds_api.json: |
        {
            "name": "CloverDX Data Services",
            "version": "1.0",
            "description": "CloverDX Data Services",
            "contextPath": "/data-service",
            "endpoint": "http://cloverdx:8080/clover/data-service",
            "groups": [
        ],
        "paths": 
            []
        }
    ds_plan.json: |
        {
            "name": "CloverDX Data Services Plan",
            "description": "CloverDX Data Services Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    grafana_api.json: |
        {
            "name": "Grafana",
            "version": "1.0",
            "description": "Monitoring - Grafana",
            "contextPath": "/monitoring",
            "endpoint": "http://grafana:3000",
            "groups": [
        ],
        "paths": 
            []
        }
    grafana_plan.json: |
        {
            "name": "Grafana Plan",
            "description": "Grafana Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    gravitee_ui_api.json: |
        {
            "name": "Gravitee UI",
            "version": "1.0",
            "description": "Gravitee Management UI",
            "contextPath": "/gravitee",
            "endpoint": "http://gravitee-management-ui-svc:80",
            "groups": [
        ],
        "paths": 
            []
        }
    gravitee_ui_plan.json: |
        {
            "name": "Gravitee UI Plan",
            "description": "Gravitee Management UI Plan",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }
    ds_oauth_api.json: |
        {
            "name": "CloverDX Data Services with oAuth2",
            "version": "1.0",
            "description": "CloverDX Data Services",
            "contextPath": "/ds-oauth2",
            "endpoint": "http://cloverdx:8080/clover/data-service",
            "groups": [
        ],
        "paths": 
            []
        }
    ds_oauth_plan.json: |
        {
            "name": "CloverDX Data Services Plan with oAuth2",
            "description": "CloverDX Data Services Plan with oAuth2",
            "validation": "AUTO",
            "characteristics":[],
        "paths": {
            "/":[]
        },
        "security": "KEY_LESS"
        }    
    ds_oauth_update.json: |    
        {
            "name":"CloverDX Data Services with oAuth2",
            "description":"CloverDX Data Services with oAuth2",
            "version":"1.0",
            "proxy":{
                "context_path":"/ds-oauth2",
                "strip_context_path":false,
                "groups":[
                    {
                        "name":"default-group",
                        "endpoints":[
                            {
                                "name":"default",
                                "target":"http://cloverdx:8080/clover/data-service",
                                "weight":1,
                                "backup":false,
                                "type":"HTTP",
                                "inherit":true
                            }
                        ],
                        "load_balancing":
                            {
                                "type":"ROUND_ROBIN"
                            },
                        "http":{
                            "connectTimeout":5000,
                            "idleTimeout":60000,
                            "keepAlive":true,
                            "readTimeout":10000,
                            "pipelining":false,
                            "maxConcurrentConnections":100,
                            "useCompression":true,
                            "followRedirects":false
                        }
                    }
                ]
            },
            "paths":{
                "/":[
                    {
                        "methods":[
                            "GET"
                        ],
                        "description":"Description of the OAuth2 Gravitee Policy",
                        "enabled":true,
                        "oauth2":{
                            "extractPayload":false,
                            "checkRequiredScopes":false,
                            "modeStrict":false,
                            "propagateAuthHeader":true,
                            "requiredScopes":[],
                            "oauthResource":"oauth"
                        }
                    }
                ]
            },
            "visibility":"private",
            "resources":[
                {
                    "name":"oauth",
                    "type":"oauth2-am-resource",
                    "enabled":true,
                    "configuration":{
                        "version":"V2_X",
                        "userClaim":"sub",
                        "serverURL":"http://gravitee-am-gateway-svc:8092",
                        "clientId":"THE-CLIENT-ID",
                        "clientSecret":"THE-CLIENT-SECRET",
                        "securityDomain":"cloverdx-domain"
                    }
                }
            ]
        }    
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name:  gravitee-apis
kind: List
metadata: {}
