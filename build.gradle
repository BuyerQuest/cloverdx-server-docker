repositories {
	mavenCentral()
	jcenter()
}

defaultTasks 'build'

configurations {
	dbDriverLib { transitive = false }
	bouncyCastleLib { transitive = false }
	cloverLib { transitive = false }
	prometheus { transitive = false }
	djlPytorchLib { transitive = false }
}

dependencies {
	cloverLib "javax.jms:javax.jms-api:2.0.1"
	
	dbDriverLib "com.microsoft.sqlserver:mssql-jdbc:12.4.2.jre11"
	dbDriverLib "com.mysql:mysql-connector-j:8.2.0"
	dbDriverLib "com.oracle.database.jdbc:ojdbc11:23.4.0.24.05"
	dbDriverLib "org.postgresql:postgresql:42.7.3"

	bouncyCastleLib "org.bouncycastle:bcprov-jdk15on:1.70"

	djlPytorchLib "ai.djl.pytorch:pytorch-native-cu124:2.5.1:linux-x86_64"

	prometheus "io.prometheus.jmx:jmx_prometheus_javaagent:0.12.0"
}

task copyDbDriverLib(type: Copy) {
	from configurations.dbDriverLib
	into "public/var/dbdrivers"
}

task copyBouncyCastleLib(type: Copy) {
	from configurations.bouncyCastleLib
	into "public/var/bouncy-castle"
}

task copyCloverLib(type: Copy) {
	from configurations.cloverLib
	into "public/var/clover-lib"
}

task copyDjlPytorchLib(type: Copy) {
	from configurations.djlPytorchLib
	into "public/var/clover-lib"
}

task copyPrometheusJmxAgent(type: Copy) {
	from configurations.prometheus
	into "examples/kubernetes"
}

// Logging
tasks.withType(Copy) {
	doFirst { logger.lifecycle("Copying files into {}:", projectDir.toPath().relativize(destinationDir.toPath())) }
	eachFile { logger.lifecycle("* {}", it.file.name) }
}

task build(dependsOn: [copyDbDriverLib, copyCloverLib, copyBouncyCastleLib]) {
}