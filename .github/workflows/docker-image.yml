name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'release-6-7'
        type: choice
        options:
          - release-7-1
          - release-6-7
      clover_war_url:
        description: 'URL to clover.war file'
        required: true
        type: choice
        default: 'https://support.cloverdx.com/download?file=6.7.1/server/deploy/tomcat7-9/Application%20Files/clover.war'
        options:
            - 'https://support.cloverdx.com/download?file=7.1.0/server/deploy/tomcat10/Application%20Files/clover.war'
            - 'https://support.cloverdx.com/download?file=6.7.1/server/deploy/tomcat7-9/Application%20Files/clover.war'

permissions:
  id-token: write
  contents: read

jobs:

  build:
    name: Build Docker Containers
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Download clover.war
        run: |
          curl -SL ${{ github.event.inputs.clover_war_url }} -o clover.war

      - name: Run gradlew
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::059815327807:role/GithubECRRole"
          aws-region: "us-west-2"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Build and push
        id: image-build
        uses: docker/build-push-action@v3
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "base-image/cloverdx-server"
        with:
          context: .
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.event.inputs.branch }}
          platforms: linux/arm64
          push: true
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.event.inputs.branch }}
          cache-to: type=inline